Emacs Project Helper

* Definitions

** Project

From a user standpoint it's a directory that has .ph file in it. Every
other file in the directory belongs to the project. User may think that
the directory is the project itself & .ph file is just a file that emacs
need to keep track of project files.

Child directories (dired buffers) cannot be recorded in .ph file, but
they are automatically marked as project belongings if user opens them,
so when closing the project they will be closed too.

** Project name

A directory with project files. For example, if /foo/bar contains .ph
file then project name is 'bar'. If / directory contains .ph, then
project name is 'Root'. If there are 2 open projects in 2 directories:
/foo/bar & /bar their names will be 'bar' and 'bar<2>' correspondingly.

Project names are dynamic & are generated automatically in the similar
way as emacs invents names for buffers.

** Subproject

It's possible to have one project enclosed into another. Technically
they completely independent from each other. It's not possible to have a
file that belongs to 2 projects. (Symlinks? FIXME)

* Lisp
** Project

Object that represent project in memory ('ven' is from venture):

(cl-defstruct ph-ven
  db
  version
  opfl
)

Its serialised version is a '.ph' file. ph-ven contains its absolute
path (db). opfl is a hash of currently opened project files in
emacs. When user load the project, PH tries to open all files mentioned
in the hash. If user kills a buffer with one of project files, PH
deletes its name form opfl.

db is always a full path to the .ph file. opfl contains only relative
paths to the parent dir (this is done for easily moving the project
directory elsewhere).

** Global list

ph-vl is a list of ph-ven cells and holds currently opened projects in
emacs. It's updated only if user opens/closes file that belongs to some
project.

It's persistent across toggling ph-mode but vanishes on emacs exit.

** Project actions

All user-level commands are in ph-project-* functions.

Its prohibited to parse or modify db file or corresponding cell in ph-vl
list. Use only ph-venture-* functions for that.

* BUGS

1. Start emacs (opened projects == 0), open a file in some project
   directory. Then ph-project-open THAT project.

   If the file wasn't in db it would not be recorded until user kills it
   and opens again WHEN the project is open.

   PFX (Possible Future Fix): in ph-project-open kill already opened
   buffers that may belong to the project.
